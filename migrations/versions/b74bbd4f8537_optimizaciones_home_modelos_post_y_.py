"""Optimizaciones home modelos Post y Evento

Revision ID: b74bbd4f8537
Revises: 7a3965668186
Create Date: 2025-08-12 00:19:40.873023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b74bbd4f8537'
down_revision = '7a3965668186'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_attendees',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['evento.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'user_id')
    )
    op.drop_table('actividad_usuarios')
    op.drop_table('sesiones_activas')
    with op.batch_alter_table('evento', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('max_attendees', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_recurring', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('recurrence_pattern', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('reminder_sent', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('created_by', sa.Integer(), nullable=False, server_default='1'))
        batch_op.create_foreign_key('fk_evento_created_by', 'usuarios', ['created_by'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('evento', schema=None) as batch_op:
        batch_op.drop_constraint('fk_evento_created_by', type_='foreignkey')
        batch_op.drop_column('created_by')
        batch_op.drop_column('reminder_sent')
        batch_op.drop_column('recurrence_pattern')
        batch_op.drop_column('is_recurring')
        batch_op.drop_column('max_attendees')
        batch_op.drop_column('type')
        batch_op.drop_column('location')

    op.create_table('sesiones_activas',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=100), nullable=False),
    sa.Column('started_at', sa.DATETIME(), nullable=True),
    sa.Column('last_activity', sa.DATETIME(), nullable=True),
    sa.Column('ended_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('actividad_usuarios',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('activity_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('details', sa.VARCHAR(length=500), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=200), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('event_attendees')
    # ### end Alembic commands ###
